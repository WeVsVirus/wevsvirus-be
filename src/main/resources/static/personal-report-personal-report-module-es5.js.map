{"version":3,"sources":["webpack:///src/app/personal-report/personal-report-routing.module.ts","webpack:///src/app/personal-report/personal-report.module.ts","webpack:///src/app/personal-report/personal-report.page.html","webpack:///src/app/personal-report/personal-report.page.ts"],"names":["routes","path","component","PersonalReportPageRoutingModule","forChild","imports","exports","PersonalReportPageModule","declarations","PersonalReportPage","questionService","Highcharts","moodQuestions","user","JSON","parse","window","localStorage","getItem","loadUserMoodQuestions","id","labels","getAllMoodQuestions","reduce","acc","q","question","showChart","chartOptions","chart","zoomType","title","text","xAxis","type","yAxis","legend","enabled","plotOptions","area","marker","radius","lineWidth","states","hover","threshold","series","Object","entries","map","plot","name","data","d","Date","e","sort","a","b","slice","selector","templateUrl","styleUrls"],"mappings":"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","file":"personal-report-personal-report-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PersonalReportPage } from './personal-report.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PersonalReportPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PersonalReportPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PersonalReportPageRoutingModule } from './personal-report-routing.module';\n\nimport { PersonalReportPage } from './personal-report.page';\nimport {HighchartsChartModule} from 'highcharts-angular';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PersonalReportPageRoutingModule,\n    HighchartsChartModule,\n  ],\n  declarations: [PersonalReportPage]\n})\nexport class PersonalReportPageModule {}\n","<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot=\"start\">\n            <ion-back-button></ion-back-button>\n        </ion-buttons>\n        <ion-title>\n            Deine Auswertung\n        </ion-title>\n    </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n    <div style=\"display: flex; justify-content: center;\">\n        <highcharts-chart\n                *ngIf=\"chartOptions\"\n                [Highcharts]=\"Highcharts\"\n                [options]=\"chartOptions\"\n                style=\"width: 100%; height: 400px; display: block;\"\n        ></highcharts-chart>\n\n    </div>\n\n</ion-content>\n","import {Component, OnInit} from '@angular/core';\nimport * as Highcharts from 'highcharts';\nimport {MoodQuestion, QuestionService} from '../services/question.service';\n\n@Component({\n    selector: 'app-personal-report',\n    templateUrl: './personal-report.page.html',\n    styleUrls: ['./personal-report.page.scss'],\n})\nexport class PersonalReportPage implements OnInit {\n    Highcharts: typeof Highcharts = Highcharts;\n    chartOptions: Highcharts.Options;\n\n    moodQuestions: Array<MoodQuestion> = [];\n    labels: {};\n\n    constructor(private readonly questionService: QuestionService) {\n    }\n\n    async ngOnInit() {\n        const user = JSON.parse(window.localStorage.getItem('user'));\n        this.moodQuestions = await this.questionService.loadUserMoodQuestions(user.id);\n        this.labels = this.questionService.getAllMoodQuestions().reduce((acc, q) => {\n            return {\n                ...acc,\n                [q.id]: q.question,\n            };\n        }, {});\n\n        this.showChart();\n    }\n\n    showChart() {\n        this.chartOptions = {\n            chart: {\n                zoomType: 'x',\n            },\n            title: {\n                text: '',\n            },\n            xAxis: {\n                type: 'datetime',\n            },\n            yAxis: {\n                title: {\n                    text: 'Stimmung',\n                },\n            },\n            legend: {\n                enabled: true,\n            },\n            plotOptions: {\n                area: {\n\n                    marker: {\n                        radius: 2,\n                    },\n                    lineWidth: 1,\n                    states: {\n                        hover: {\n                            lineWidth: 1,\n                        },\n                    },\n                    threshold: null,\n                },\n            },\n\n            series: Object.entries(this.moodQuestions).map(([id, plot]) => {\n                return {\n                    type: 'line',\n                    name: this.labels[id],\n                    data: ((plot || []) as any).map((d) => {\n                        try {\n                            return [Date.parse(d[0]), d[1]];\n                        } catch (e) {\n                            return [];\n                        }\n                    }).sort((a, b) => {\n                        return a[0] < b[0] ? 1 : -1;\n                    }).slice(0, 7),\n                };\n            }),\n        };\n\n    }\n}\n"]}